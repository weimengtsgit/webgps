/**
 * 
 */
var CarCurrentDirection = (function(){
	//车辆当前运行方向控制窗口
	var _win=null;
	
	//查询车辆终端当前运行方向信息
	var _queryCarCurrentDirection = function(gpsDeviceIds,lbsDeviceIds){
		Ext.Ajax.request({
			url : path + '/locate/locate.do?method=queryLocByTime',
			method : 'POST',
			params : {
				gpsDeviceIds : gpsDeviceIds,
				lbsDeviceIds : lbsDeviceIds,
				now : "true",
				time : ""
			},
			//timeout : 10000,
			success : function(request) {
				var res = request.responseText;
				var locs = Ext.util.JSON.decode(res);
				if (locs == null || locs.length == 0) {
					Ext.Msg.alert('提示', "没有有效的定位数据!");
					return;
				}
				var ps = new Array();
				for ( var i = 0; i < locs.length; i++) {
					var loc_desc = "....";
					var loc = locs[i];
					var imageUrl= _getDirectionPic(loc.direction,loc.speed,loc.status,loc.type);
					var label = '';
					var content = '';
					
					// 判断为GPS还是手机
					if (loc.type == '0') {// 手机
						// 获得手机号码
						var treeArr = new Array();
						getTreeIdByDeviceId(root, treeArr, loc.deviceId);
						var idArr = treeArr[0].id.split('@#');
						var simcard = idArr[2];// 手机号码
						//var vehicleNumber = idArr[3];// 车牌号码
						var text = treeArr[0].text;// 姓名
						label = text;
						content += '姓&nbsp;&nbsp;名：' + text + '<br>';
						content += '手机号码：' + simcard + '<br>';
						content += '定位时间：' + loc.time + '<br>';
						content += '位&nbsp;&nbsp;置：' + loc_desc + '<br>';
						if(loc.lastTime !="null"){
							content += '接收时间：'+loc.lastTime+'<br>';
						}
					}else{
						// 获得手机号码、车牌号
						var treeArr = new Array();
						getTreeIdByDeviceId(root, treeArr, loc.deviceId);
						var idArr = treeArr[0].id.split('@#');
						var simcard = idArr[2];
						var vehicleNumber = idArr[3];// 车牌号码
						label  = '车牌号码：' + vehicleNumber + '\n';
						label += '速  度：' + loc.speed + ' km/h';
						
						content += '车牌号码：' + vehicleNumber + '<br>';
						content += '手机号码：' + simcard + '<br>';
						content += '定位时间：' + loc.time + '<br>';
						content += '位&nbsp;&nbsp;置：' + loc_desc + '<br>';
						content += '速&nbsp;&nbsp;度：' + loc.speed + '&nbsp;km/h';
						if (loc.temperature != "") {
							content += "<br>";
							content += '温&nbsp;&nbsp;度：' + loc.temperature
									+ '&nbsp;';
						}
						if(loc.lastTime !="null"){
							content += "<br>";
							content += '接收时间：'+loc.lastTime+'<br>';
						}
					}
					var p = new map.PointMarker(loc.deviceId + 'direc' + i, loc.jmx,
							loc.jmy, label, content, imageUrl, true);
					ps.push(p);
				}
				//是否锁定视野
				var carCurrentDirection_map_radio = Ext.getCmp('carCurrentDirection_map_radiogroup')
						.getValue().getGroupValue();
				if (carCurrentDirection_map_radio == 1) {//自由视野
					locationPointArr = map.addPointMarkers(ps, false);
				} else if (carCurrentDirection_map_radio == 2) {//锁定视野
					locationPointArr = map.addPointMarkers(ps, true);
				}
			},
			failure : function(request) {
				Ext.Msg.alert('提示', "定位失败!");
			}
		});
	};
	//定时装置
	var _Runner = function() {
		var RunnerInterval = null;
		var RunnerIntervalCount = 1;
		var f = function(pbar, count, callback) {
			return function() {
				if (RunnerIntervalCount > count) {
					callback();
					RunnerIntervalCount = 1;
				} 
				var i = RunnerIntervalCount / count;
				pbar.updateProgress(i);
				RunnerIntervalCount++;
			};
		};
		return {
			run : function(pbar, count, callback) {
				if(RunnerInterval){
					stop();
				}
				//立马执行一次
				if(callback){callback();}
				RunnerIntervalCount = 1;
				RunnerInterval = setInterval(f(pbar, count, callback), 1000);
			},
			stop : function(){
				if(RunnerInterval){
					clearInterval(RunnerInterval);
					RunnerInterval = null;
				}
			}
		};
	}();
	
	/**
	 * 初始化窗口
	 */
	var _intializeWin = function(){
		_win = new Ext.Window({
			applyTo : 'carCurrentDirection-win',
			layout : 'fit',
			width : 300,
			height : 250,
			closeAction : 'hide',
			plain : true,
			title : '当前车辆',
			//modal:true,
			buttons : [ {
				text : '确定',
				id : 'carCurrentDirection_btn_ok',
				handler : function() {
					var intervalTime = Ext.getCmp('carCurrentDirection_field').getValue();
					if (!intervalTime) {
						Ext.Msg.alert('提示', '请输入追踪时间间隔!');
						return;
					}
					if(Number(intervalTime)<30){
						Ext.Msg.alert('提示', '追踪时间间隔不能小于30秒!');
						return;
					}
					var treeArr = new Array();
					getTreeId(root, treeArr);
					if (treeArr.length <= 0) {
						Ext.Msg.alert('提示', '请选择终端!');
						return;
					}
					if (treeArr.length > 50) {
						Ext.Msg.alert('提示', '实时追踪操作的终端数请小于50个!');
						return;
					}
					
					//gps终端（车辆终端）
					var gpsDeviceIds= '';
					//lbs终端（手机终端）
					var lbsDeviceids = '';
					for ( var i = 0; i < treeArr.length; i++) {
						var idArr = treeArr[i].id.split('@#');
						//车辆终端
						if (idArr.length > 2 && idArr[1] == '0') {
							lbsDeviceids += idArr[0] + ',';
						} else if (idArr.length > 2 && idArr[1] == '1') {
							gpsDeviceIds += idArr[0] + ',';
						}
					}
					if (gpsDeviceIds.length > 0) {
						gpsDeviceIds = gpsDeviceIds.substring(0,gpsDeviceIds.length - 1);
					}
					if (lbsDeviceids.length > 0) {
						lbsDeviceids = lbsDeviceids.substring(0,lbsDeviceids.length - 1);
					}
					var pbar = Ext.getCmp('carCurrentDirection_pbar');
					_Runner.run(pbar, intervalTime, function() {
						_queryCarCurrentDirection(gpsDeviceIds,lbsDeviceids);
					});
					Ext.getCmp('carCurrentDirection_btn_ok').hide();
					Ext.getCmp('carCurrentDirection_btn_cancel').hide();
					Ext.getCmp('carCurrentDirection_btn_back').show();
				}
			}, {
				text : '取消',
				id : 'carCurrentDirection_btn_cancel',
				handler : function() {
					_closeWin();
				}
			}, {
				text : '返回',
				id : 'carCurrentDirection_btn_back',
				hidden : true,
				handler : function() {
					Ext.getCmp('carCurrentDirection_btn_ok').show();
					Ext.getCmp('carCurrentDirection_btn_cancel').show();
					Ext.getCmp('carCurrentDirection_btn_back').hide();
					//关闭定时器
					_Runner.stop();
					//重置进度条
					var pbar = Ext.getCmp('carCurrentDirection_pbar');
					pbar.reset();
					map = document.getElementById('mapifr').contentWindow;
					for ( var i = 0; i < locationPointArr.length; i++) {
						map.removeOverlay(locationPointArr[i]);
					}
					locationPointArr = [];
				}
			} ],
			listeners : {
				'hide' : function(p) {
					_closeWin();
				}
			},
			items : new Ext.FormPanel({
				id : 'carCurrentDirectionform',
				width : 300,
				labelWidth : 120,
				bodyStyle : 'padding:5px 10px 0',
				items : [ {
					xtype : 'numberfield',
					id : 'carCurrentDirection_field',
					fieldLabel : '追踪时间间隔(秒)',
					value : 60,
					anchor : '95%'
				}, {
					xtype : 'radiogroup',
					fieldLabel : '地图显示模式',
					id : 'carCurrentDirection_map_radiogroup',
					items : [ {
						boxLabel : '自由视野',
						name : 'carCurrentDirection_map_radio',
						inputValue : 1
					}, {
						boxLabel : '锁定视野',
						name : 'carCurrentDirection_map_radio',
						inputValue : 2,
						checked : true
					} ]
				}, {
					xtype : 'label',
					fieldLabel : '距下次定位时间间隔'
				}, new Ext.ProgressBar({
					id : 'carCurrentDirection_pbar',
					cls : 'custom'
				})]
			})
		});
	};
	
	//关闭窗口
	function _closeWin() {
		//关闭定时器
		_Runner.stop();
		//重置进度条
		var pbar = Ext.getCmp('carCurrentDirection_pbar');
		if (pbar) {
			pbar.reset();
			Ext.getCmp('carCurrentDirection_btn_ok').show();
			Ext.getCmp('carCurrentDirection_btn_cancel').show();
			Ext.getCmp('carCurrentDirection_btn_back').hide();
		}
		map = document.getElementById('mapifr').contentWindow;
		for ( var i = 0; i < locationPointArr.length; i++) {
			map.removeOverlay(locationPointArr[i]);
		}
		locationPointArr = [];
		//隐藏窗口
		if (_win) {
			_win.hide();
		}
	}
	
	var ayuan = function(direction,n){
		direction = Number(direction);
		return ((direction+360/(2*n))%360)/(360/n)+1;
	};
	
	//根据速度、状态与direction获取显示图标 
	//status:1、2、3分别对应24小时内acc状态正常、24小时内acc状态无效、24小时内无数据(暂时不用这个)
	var _getDirectionPic = function(direction,speed,status,type){
		var imageUrl = '';
		if(type == '0'){//手机终端
			if (status == 1) {// 有效数据
				imageUrl = path + '/images/persion_1.gif';
			} else if (status == 2) {// 无效数据
				imageUrl = path + '/images/persion_2.gif';
			} else {// 无数据
				imageUrl = path + '/images/persion_3.gif';
			}
		}else{
			imageUrl = path + '/images/car_direction/'+Math.floor(ayuan(direction,35))+'.gif';
		}
		return imageUrl;
	};
	
	return {
		carCurrentDirectionImgClick:function(){
			//关闭实时追踪
    		StopRealtimeTrack();
			if(!_win){
				_intializeWin();
			}
			_win.show();
			_win.render("carCurrentDirection-win");
			_win.setPosition(5);
		},
		closeWin : function(){
			_closeWin();
		}
	};
})();

//为了更其它调用方法调用保持一致，将carCurrentDirectionImgClick直接设置为全局变量
window.carCurrentDirectionImgClick = CarCurrentDirection.carCurrentDirectionImgClick;
window.StopCarCurrentDirection = CarCurrentDirection.closeWin;