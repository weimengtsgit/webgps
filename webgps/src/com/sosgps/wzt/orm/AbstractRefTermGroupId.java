package com.sosgps.wzt.orm;



/**
 * AbstractRefTermGroupId generated by MyEclipse - Hibernate Tools
 */

public abstract class AbstractRefTermGroupId  implements java.io.Serializable {


    // Fields    

     private TTerminal TTerminal;
     private TTermGroup TTermGroup;


    // Constructors

    /** default constructor */
    public AbstractRefTermGroupId() {
    }

	/** minimal constructor */
    public AbstractRefTermGroupId(TTermGroup TTermGroup) {
        this.TTermGroup = TTermGroup;
    }
    
    /** full constructor */
    public AbstractRefTermGroupId(TTerminal TTerminal, TTermGroup TTermGroup) {
        this.TTerminal = TTerminal;
        this.TTermGroup = TTermGroup;
    }

   
    // Property accessors

    public TTerminal getTTerminal() {
        return this.TTerminal;
    }
    
    public void setTTerminal(TTerminal TTerminal) {
        this.TTerminal = TTerminal;
    }

    public TTermGroup getTTermGroup() {
        return this.TTermGroup;
    }
    
    public void setTTermGroup(TTermGroup TTermGroup) {
        this.TTermGroup = TTermGroup;
    }
   



   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractRefTermGroupId) ) return false;
		 AbstractRefTermGroupId castOther = ( AbstractRefTermGroupId ) other; 
         
		 return ( (this.getTTerminal()==castOther.getTTerminal()) || ( this.getTTerminal()!=null && castOther.getTTerminal()!=null && this.getTTerminal().equals(castOther.getTTerminal()) ) )
 && ( (this.getTTermGroup()==castOther.getTTermGroup()) || ( this.getTTermGroup()!=null && castOther.getTTermGroup()!=null && this.getTTermGroup().equals(castOther.getTTermGroup()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getTTerminal() == null ? 0 : this.getTTerminal().hashCode() );
         result = 37 * result + ( getTTermGroup() == null ? 0 : this.getTTermGroup().hashCode() );
         return result;
   }   





}